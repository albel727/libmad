dnl -*- shell-script -*-
dnl
dnl mad - MPEG audio decoder
dnl Copyright (C) 2000 Robert Leslie
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
dnl
AC_REVISION([$Id: configure.in,v 1.26 2000/09/20 01:02:49 rob Exp $])dnl

dnl Process this file with autoconf to produce a configure script.

AC_INIT(libmad/decoder.h)
AC_CONFIG_HEADER(config.h)

AC_CONFIG_SUBDIRS(libmad)

dnl System type.

AC_CANONICAL_HOST

dnl Checks for programs.

AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_INSTALL

dnl Compiler options.

AC_PROG_GCC_TRADITIONAL

ARCH=""
DEBUGGER=""
OPTIMIZER=""
PROFILER=""

AC_SUBST(ARCH)
AC_SUBST(DEBUGGER)
AC_SUBST(OPTIMIZER)
AC_SUBST(PROFILER)

if test "$GCC" = yes
then
    case "$host" in
	i386-*)      ARCH="" ;;
	i?86-*)      ARCH="-m486" ;;
	arm-empeg-*) ARCH="-march=armv4 -mtune=strongarm1100" ;;
	arm-*)       ARCH="-march=armv4 -mtune=strongarm" ;;
	mips-*)      ARCH="-mips3" ;;
		     #-mcpu=vr4100
    esac
fi

case "$CFLAGS" in
    *-g*) DEBUGGER="-g" ;;
esac

case "$CFLAGS" in
    *-O*) OPTIMIZER="-O2" ;;
esac

CFLAGS=""

if test -n "$OPTIMIZER" && test "$GCC" = yes
then
    OPTIMIZER="$OPTIMIZER"
    # -funroll-loops -finline-functions
fi

dnl Checks for header files.

AC_HEADER_STDC
AC_CHECK_HEADERS(getopt.h)

dnl Checks for typedefs, structures, and compiler characteristics.

AC_C_CONST
AC_C_INLINE
AC_C_BIGENDIAN

dnl Checks for library functions.

AC_FUNC_VPRINTF

case "$host" in
    *-linux*) AC_DEFINE(HAVE_MMAP) ;;
    *)        AC_FUNC_MMAP ;;
esac

dnl Cache checkpoint.

AC_CACHE_SAVE

dnl Select an audio system.

AUDIO=""

AC_SUBST(AUDIO)

AC_MSG_CHECKING(for audio support)

audio="unknown"

case "$host" in
    arm-empeg-*) audio="empeg" ;;
esac

if test "$audio" = unknown
then
    AC_EGREP_CPP(yes, [
# include <sys/soundcard.h>
# if defined(OPEN_SOUND_SYSTEM) || defined(UNIX_SOUND_SYSTEM)
yes
# endif
], [audio="oss"])
fi

if test "$audio" = unknown
then
    AC_EGREP_CPP(audio_info_t, [
# include <sys/audioio.h>
], [audio="sun"])
fi

if test "$audio" = unknown
then
    AC_EGREP_CPP(waveOutOpen, [
# include <mmsystem.h>
], [audio="win32"; LIBS="$LIBS -lwinmm"])
fi

AC_MSG_RESULT($audio)

if test "$audio" = unknown
then
    AC_MSG_WARN(audio support not available; using null module)
    AC_DEFINE(AUDIO_DEFAULT, audio_null)
else
    audio="audio_$audio"
    AC_DEFINE_UNQUOTED(AUDIO_DEFAULT, $audio)

    AUDIO="$audio.o"
fi

dnl Prepare target variables.

MAKE_TARGETS="default"
INSTALL_TARGETS="install_default"

AC_SUBST(MAKE_TARGETS)
AC_SUBST(INSTALL_TARGETS)

dnl Other options.

dnl libmad options...

AC_ARG_ENABLE(speed,
    [  --enable-speed          optimize for speed over accuracy])
AC_ARG_ENABLE(accuracy,
    [  --enable-accuracy       optimize for accuracy over speed])
AC_ARG_ENABLE(fpm,
    [  --enable-fpm=<arch>     use <arch>-specific fixed-point math routines
                          (one of: intel, arm, mips, sparc, 64bit, approx)])
AC_ARG_ENABLE(is-kluge,
    [  --disable-is-kluge      do not use Layer III intensity stereo kluge])
AC_ARG_ENABLE(sso,
    [  --enable-sso            use subband synthesis optimization])
AC_ARG_ENABLE(aso,
    [  --enable-aso            use architecture-specific optimizations])

dnl madplay options...

AC_ARG_ENABLE(profiling,
    [  --enable-profiling      generate profiling code], [
    case "$enableval" in
	yes) PROFILER="-pg" ;;
    esac
])

AC_ARG_ENABLE(debugging,
    [  --enable-debugging      enable diagnostic debugging support
  --disable-debugging     do not enable debugging and use more optimization], [
    case "$enableval" in
	yes)
	    AC_DEFINE(DEBUG)
	    AUDIO="$AUDIO audio_hex.o"
	    ;;
	no)
	    if test -n "$PROFILER"
	    then
    AC_MSG_ERROR(--enable-profiling and --disable-debugging are incompatible)
	    fi

	    AC_DEFINE(NDEBUG)
	    DEBUGGER=""
	    if test "$GCC" = yes
	    then
		OPTIMIZER="$OPTIMIZER -fomit-frame-pointer"
	    fi
	    ;;
    esac
])

AC_ARG_ENABLE(experimental,
    [  --enable-experimental   enable experimental code], [
    case "$enableval" in
	yes) AC_DEFINE(EXPERIMENTAL) ;;
    esac
])

AC_ARG_ENABLE(devlib,
    [  --enable-devlib         enable installation of developer library], [
    case "$enableval" in
	yes) INSTALL_TARGETS="$INSTALL_TARGETS install_lib" ;;
    esac
])

dnl Create output files.

AC_OUTPUT(Makefile)
